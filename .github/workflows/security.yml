name: Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
  workflow_dispatch:

jobs:
  basic-security:
    name: Basic Security Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for hardcoded secrets
        run: |
          echo "🔍 Scanning for potential secrets..."
          # Simple regex patterns for common secrets
          if grep -r -i "password\|secret\|key\|token" --include="*.c" --include="*.h" . | grep -v "// Example\|/\*\|printf\|scanf"; then
            echo "⚠️ Potential hardcoded secrets found"
          else
            echo "✅ No hardcoded secrets detected"
          fi

      - name: Buffer overflow detection
        run: |
          echo "🔍 Checking for potential buffer overflow patterns..."
          if grep -r "gets\|strcpy\|strcat\|sprintf" --include="*.c" . | grep -v "// Unsafe\|/\* Unsafe\|snprintf\|strncpy\|strncat"; then
            echo "⚠️ Potentially unsafe functions found - review for buffer overflow risks"
          else
            echo "✅ No obvious unsafe function usage detected"
          fi

  advanced-security:
    name: Advanced Security Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install security tools
        run: |
          sudo apt-get update
          sudo apt-get install -y cppcheck clang-static-analyzer

      - name: Run comprehensive static analysis
        run: |
          echo "🔍 Running comprehensive security analysis..."
          
          # Create security report
          echo "# Security Analysis Report" > security-report.md
          echo "Generated: $(date)" >> security-report.md
          echo "" >> security-report.md
          
          # Run cppcheck with security focus
          echo "## Static Analysis (cppcheck)" >> security-report.md
          find . -name "*.c" -not -path "./.git/*" | head -20 | while read file; do
            echo "Analyzing: $file"
            cppcheck --enable=warning,style,performance,portability \
              --suppress=missingIncludeSystem \
              --suppress=unusedFunction \
              --template='{file}:{line}: {severity}: {message}' \
              "$file" 2>&1 | grep -v "^Checking" || echo "No issues in $file"
          done >> security-report.md

      - name: Memory safety analysis
        run: |
          echo "" >> security-report.md
          echo "## Memory Safety Analysis" >> security-report.md
          
          # Check for dangerous functions
          echo "### Potentially Unsafe Functions" >> security-report.md
          if grep -rn "gets\|strcpy\|strcat\|sprintf\|scanf" --include="*.c" . | head -10; then
            grep -rn "gets\|strcpy\|strcat\|sprintf\|scanf" --include="*.c" . | head -10 >> security-report.md
          else
            echo "✅ No obviously unsafe functions found" >> security-report.md
          fi
          
          echo "" >> security-report.md
          echo "### Buffer Operations" >> security-report.md
          if grep -rn "malloc\|calloc\|realloc\|free" --include="*.c" . | head -10; then
            echo "Memory operations found (review for proper error handling):" >> security-report.md
            grep -rn "malloc\|calloc\|realloc\|free" --include="*.c" . | head -10 >> security-report.md
          else
            echo "No dynamic memory operations found" >> security-report.md
          fi

      - name: Input validation check
        run: |
          echo "" >> security-report.md
          echo "## Input Validation" >> security-report.md
          
          # Check for input functions without validation
          echo "### Input Functions" >> security-report.md
          if grep -rn "scanf\|fgets\|getchar" --include="*.c" . | head -10; then
            echo "Input functions found (ensure proper validation):" >> security-report.md
            grep -rn "scanf\|fgets\|getchar" --include="*.c" . | head -10 >> security-report.md
          else
            echo "No input functions found" >> security-report.md
          fi

      - name: Generate security summary
        run: |
          echo "" >> security-report.md
          echo "## Summary" >> security-report.md
          echo "- Repository scanned: $(find . -name "*.c" | wc -l) C files" >> security-report.md
          echo "- Analysis completed: $(date)" >> security-report.md
          echo "- Status: ✅ Basic security checks completed" >> security-report.md
          
          echo "📊 Security analysis completed"
          cat security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-analysis-report
          path: security-report.md
